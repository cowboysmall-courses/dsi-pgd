
# %% 0 - 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm

from arch.unitroot import ADF
from statsmodels.graphics.tsaplots import plot_acf
from statsmodels.tsa.statespace.tools import diff


# %% 1 - 
data = pd.read_csv("./data/0504_time_series_analysis/01_time_series_analysis_introduction/Sales Data for 3 Years.csv")
data.head()
# 	Year	Month	Sales
# 0	2013	  Jan	123.0
# 1	2013	  Feb	142.0
# 2	2013	  Mar	164.0
# 3	2013	  Apr	173.0
# 4	2013	  May	183.0


# %% 2 - 
rng = pd.date_range('01-01-2013', '31-12-2015', freq = 'M')
sales = data.Sales.values
series = pd.Series(sales, rng)


# %% 2 - 
decomposed = sm.tsa.seasonal_decompose(series.interpolate())
decomposed.plot()


# %% 3 - 
decomposed.seasonal
# 2013-01-31    -5.006944
# 2013-02-28    -1.181944
# 2013-03-31    -3.736111
# 2013-04-30    -1.588194
# 2013-05-31    -2.831944
# 2013-06-30    -2.231944
# 2013-07-31     0.234722
# 2013-08-31    -1.525694
# 2013-09-30    -4.094444
# 2013-10-31    -6.446528
# 2013-11-30    -7.127778
# 2013-12-31    35.536806
# 2014-01-31    -5.006944
# 2014-02-28    -1.181944
# 2014-03-31    -3.736111
# 2014-04-30    -1.588194
# 2014-05-31    -2.831944
# 2014-06-30    -2.231944
# 2014-07-31     0.234722
# 2014-08-31    -1.525694
# 2014-09-30    -4.094444
# 2014-10-31    -6.446528
# 2014-11-30    -7.127778
# 2014-12-31    35.536806
# 2015-01-31    -5.006944
# ...
# 2015-09-30    -4.094444
# 2015-10-31    -6.446528
# 2015-11-30    -7.127778
# 2015-12-31    35.536806
# Freq: ME, Name: seasonal, dtype: float64


# %% 4 - 
decomposed.trend
# 2013-01-31           NaN
# 2013-02-28           NaN
# 2013-03-31           NaN
# 2013-04-30           NaN
# 2013-05-31           NaN
# 2013-06-30           NaN
# 2013-07-31    192.833333
# 2013-08-31    200.770833
# 2013-09-30    207.450000
# 2013-10-31    213.195833
# 2013-11-30    218.408333
# 2013-12-31    223.016667
# 2014-01-31    227.166667
# 2014-02-28    230.962500
# 2014-03-31    234.550000
# 2014-04-30    237.929167
# 2014-05-31    241.100000
# 2014-06-30    244.516667
# 2014-07-31    247.891667
# 2014-08-31    250.575000
# 2014-09-30    252.933333
# 2014-10-31    254.991667
# 2014-11-30    257.041667
# 2014-12-31    259.104167
# 2015-01-31    261.041667
# ...
# 2015-09-30           NaN
# 2015-10-31           NaN
# 2015-11-30           NaN
# 2015-12-31           NaN
# Freq: ME, Name: trend, dtype: float64


# %% 5 - 
decomposed.resid
# 2013-01-31         NaN
# 2013-02-28         NaN
# 2013-03-31         NaN
# 2013-04-30         NaN
# 2013-05-31         NaN
# 2013-06-30         NaN
# 2013-07-31    5.931944
# 2013-08-31    3.754861
# 2013-09-30    3.644444
# 2013-10-31    2.250694
# 2013-11-30    2.719444
# 2013-12-31   -3.553472
# 2014-01-31    0.840278
# 2014-02-28    2.719444
# 2014-03-31    2.986111
# 2014-04-30    4.759028
# 2014-05-31    1.731944
# 2014-06-30    3.315278
# 2014-07-31   -3.126389
# 2014-08-31   -0.949306
# 2014-09-30   -0.838889
# 2014-10-31    0.554861
# 2014-11-30    0.086111
# 2014-12-31    6.359028
# 2015-01-31    1.965278
# ...
# 2015-09-30         NaN
# 2015-10-31         NaN
# 2015-11-30         NaN
# 2015-12-31         NaN
# Freq: ME, Name: resid, dtype: float64


# %% 6 - 
seasonal_adj = series - decomposed.seasonal
seasonal_adj.plot()
